# Project basic information configuration, required.
[project]
name = "datus-agent-clickzetta"
version = "0.2.1"
description = "Dashscope-powered Datus agent with Clickzetta integrations"
readme = "README.md"
requires-python = ">=3.11"
license = "Apache-2.0"
license-files = ["LICENSE*", "NOTICE*"]
authors = [
    { name = "Datus Team", email = "harrison.zhao@datus.ai" }
]
maintainers = [
    { name = "Datus Team", email = "harrison.zhao@datus.ai" }
]
keywords = ["sql", "ai", "agent", "database", "nlp", "natural-language"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Topic :: Database",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "python-dotenv==1.0.0",
    "pandas==2.2.3",
    "sqlalchemy==2.0.23",
    "sqlglot==26.12.0",
    "snowflake-connector-python==3.11.0",
    "clickzetta-zettapark-python==0.1.3",
    "dashscope==1.24.7",
    "pyyaml==6.0.1",
    "langsmith==0.4.38",
    "structlog==25.4.0",
    "openai==1.107.1",
    "httpx[socks]==0.27.2",
    "tantivy==0.24.0",
    "aiohttp==3.13.1",
    "xlsxwriter==3.2.9",
    "tiktoken==0.11.0",
    "openai-agents==0.3.2",
    "pydantic==2.11.7",
    "Markdown==3.8",
    "lancedb==0.18.0",
    "pylance==0.22.0",
    "pyarrow==14.0.2",
    "rich==14.0.0",
    "prompt_toolkit==3.0.51",
    "textual[syntax]==5.1.1",
    "anthropic==0.51.0",
    "duckdb-engine==0.17.0",
    "duckdb==1.3.0",
    "snowflake-sqlalchemy==1.7.3",
    "mcp>=1.11.0",
    "anyio>=4.9.0",
    "pymysql==1.1.1",
    "json-repair==0.52.2",
    "fastapi==0.120.0",
    "uvicorn==0.38.0",
    "google-generativeai==0.8.4",
    "pyperclip==1.9.0",
    "streamlit==1.49.1",
    "wcmatch==10.0",
    "fastembed==0.7.2",
    "typing-extensions==4.12.2",
]


[project.urls]
Homepage = "https://datus.ai/"
Documentation = "https://github.com/datus-ai/Datus-agent-clickzetta#readme"
Repository = "https://github.com/datus-ai/Datus-agent-clickzetta"
"Bug Tracker" = "https://github.com/datus-ai/Datus-agent-clickzetta/issues"

[project.scripts]
datus-agent-clickzetta = "datus.main:main"
datus-agent = "datus.main:main"
datus-cli = "datus.cli.main:main"
datus = "datus.cli.main:main"
datus-init = "datus.cli.interactive_init:main"

[build-system]
requires = ["setuptools>=80.9.0", "wheel"]
build-backend = "setuptools.build_meta"

[[tool.uv.index]]
url = "http://mirrors.aliyun.com/pypi/simple"
default = true

[tool.setuptools.packages.find]
where = ["."]
include = ["datus*", "mcp*"]
exclude = ["benchmark*", "docs*"]

[tool.setuptools.package-data]
"*" = ["*.yml", "*.yaml", "*.json", "*.md", "*.txt", "*.pyc", "*.j2"]
"datus" = ["*.yml", "*.yaml", "*.json", "*.md", "*.txt"]
"datus.prompts" = ["*.txt", "*.md", "*.j2"]
"datus.prompts.prompt_templates" = ["*.j2"]

[tool.setuptools.package-dir]
"mcp.mcp-metricflow-server" = "mcp/mcp-metricflow-server"

[tool.setuptools.data-files]
"mcp/mcp-metricflow-server" = ["mcp/mcp-metricflow-server/LICENSE", "mcp/mcp-metricflow-server/pyproject.toml"]
"datus/conf" = ["conf/*.yml.*"]
"datus/tests" = ["tests/*.duckdb"]

[tool.uv.pip]
index-url = "http://mirrors.aliyun.com/pypi/simple"

# uv tool run black
[tool.black]
line-length = 120
target-version = ["py312"]

[tool.flake8]
max-line-length = 120
ignore = "E203, E266, E501, W503"
max-complexity = 10
select = "B,C,E,F,W,T4,B9"
exclude = "mcp/"

[tool.pytest]
pythonpath = "."
testpaths = ["tests"]

[dependency-groups]
# uv sync --dev
dev = [
    "pytest==8.0.2",
    "pytest-asyncio>=0.23.8",
    "black==23.12.1",
    "mypy==1.8.0",
    "tqdm>=4.27.0",
    "pytest-xdist>=3.7.0",
    "pre-commit>=4.2.0",
    "setuptools>=80.9.0",
    "pip>=25.1.1",
    "build>=1.2.0",
    "twine>=6.1.0",
    "flake8>=7.3.0",
    "isort>=6.0.1",
]
